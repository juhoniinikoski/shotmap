// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "postgres"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Team {
    id           String   @id @default(cuid())
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    teamId       Int      @unique
    providerId   Int
    name         String
    officialName String
    createdTime  DateTime
    modifiedTime DateTime
    players      Player[]
    homeGames    Game[]   @relation("HomeTeam")
    awayGames    Game[]   @relation("AwayTeam")
}

model Player {
    id             String   @id @default(cuid())
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
    playerId       Int      @unique
    providerId     Int
    firstName      String
    lastName       String
    dateOfBirth    Int
    placeOfBirth   String?
    countryOfBirth String?
    nationality    String?
    height         Int
    weight         Int
    handed         String?
    position       String?
    lastTeam       Team     @relation(fields: [lastTeamId], references: [teamId])
    lastTeamId     Int
    lastTeamDate   DateTime
    createdTime    DateTime
    modifiedTime   DateTime
    shots          Shot[]   @relation("ShootingPlayer")
    blokedShots    Shot[]   @relation("OpponentPlayer")

    @@index([lastTeamId])
}

model Shot {
    id                     String   @id @default(cuid())
    createdAt              DateTime @default(now())
    updatedAt              DateTime @updatedAt
    providerId             Int
    gameProviderId         Int
    playerProviderId       Int
    teamProviderId         Int
    opponentProviderId     Int
    opponentTeamProviderId Int
    type                   String
    gametime               Int
    originalX              Int
    originalY              Int
    translatedX            Int
    translatedY            Int
    goalX                  Int
    goalY                  Int
    gameId                 Int
    playerId               Int
    player                 Player?  @relation("ShootingPlayer", fields: [playerId], references: [playerId])
    teamId                 Int
    opponentId             Int?
    opponent               Player?  @relation("OpponentPlayer", fields: [opponentId], references: [playerId])
    opponentTeamId         Int
    playerNumber           Int
    opponentNumber         Int?

    @@index([playerId])
    @@index([opponentId])
}

model Game {
    id               String   @id @default(cuid())
    createdAt        DateTime @default(now())
    updatedAt        DateTime @updatedAt
    gameId           Int      @unique
    subSerieId       Int
    providerId       Int
    season           Int
    date             DateTime
    startTime        String
    endTime          String
    clockTime        Int
    finished         Int
    overtime         Int
    shootout         Int
    homeTeamId       Int
    homeTeam         Team     @relation("HomeTeam", fields: [homeTeamId], references: [teamId])
    awayTeamId       Int
    awayTeam         Team     @relation("AwayTeam", fields: [awayTeamId], references: [teamId])
    homeScore        Int
    awayScore        Int
    playoffPair      Int?
    playoffPhase     Int?
    playoffPhaseName String?
    playoffReqWins   Int?
    spectators       Int?
    totalPeriods     Int
    createdTime      DateTime
    modifiedTime     DateTime
    statGroupId      Int
    serieId          Int

    @@index([homeTeamId])
    @@index([awayTeamId])
}

model PlayoffPair {
    id             String   @id @default(cuid())
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
    pair           Int
    phase          Int
    phaseName      String
    winsNeeded     Int
    firstTeamId    Int
    firstTeamName  String
    firstTeamWins  Int
    secondTeamId   Int
    secondTeamName String
    secondTeamWins Int
}
